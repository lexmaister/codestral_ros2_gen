{"attempt_time":16.1540458202,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":736,"total_tokens":2502,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.57s]\n\nSummary: 1 package finished [0.68s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f2e57e49690>, <rclpy.node.Node object at 0x7f2e57e51cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 4.73s\n\nstderr:\n[INFO] [1740510903.307127419] [test_node]: Service not available, waiting again...\n[INFO] [1740510905.070671238] [test_node]: Service not available, waiting again...\n[INFO] [1740510906.073115995] [test_node]: Service not available, waiting again...\n","iteration":1,"attempt":1}
{"attempt_time":9.0391914845,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":726,"total_tokens":2492,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.57s]\n\nSummary: 1 package finished [0.69s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f75ffa05ba0>, <rclpy.node.Node object at 0x7f75ffa11de0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.48s\n\nstderr:\n","iteration":1,"attempt":2}
{"attempt_time":8.8219487667,"success":true,"final_state":"SUCCESS","tests_passed":14,"tests_failed":0,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":709,"total_tokens":2475,"error":null,"iteration":1,"attempt":3}
{"attempt_time":8.5808300972,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":715,"total_tokens":2481,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.57s]\n\nSummary: 1 package finished [0.68s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f84764ad7b0>, <rclpy.node.Node object at 0x7f84764b9cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.49s\n\nstderr:\n","iteration":2,"attempt":1}
{"attempt_time":9.3096213341,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":761,"total_tokens":2527,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.59s]\n\nSummary: 1 package finished [0.70s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f35582f1750>, <rclpy.node.Node object at 0x7f35582f9cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.75s\n\nstderr:\n","iteration":2,"attempt":2}
{"attempt_time":9.9110901356,"success":true,"final_state":"SUCCESS","tests_passed":14,"tests_failed":0,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":701,"total_tokens":2467,"error":null,"iteration":2,"attempt":3}
{"attempt_time":8.7817137241,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":677,"total_tokens":2443,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.55s]\n\nSummary: 1 package finished [0.66s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7fa6162557b0>, <rclpy.node.Node object at 0x7fa616261cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.15s\n\nstderr:\n","iteration":3,"attempt":1}
{"attempt_time":8.8438665867,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":756,"total_tokens":2522,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.54s]\n\nSummary: 1 package finished [0.65s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7faeafc8d720>, <rclpy.node.Node object at 0x7faeafc95cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.48s\n\nstderr:\n","iteration":3,"attempt":2}
{"attempt_time":8.7150201797,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":686,"total_tokens":2452,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.60s]\n\nSummary: 1 package finished [0.72s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f19f4119780>, <rclpy.node.Node object at 0x7f19f4125cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 716.6993843078614 < 0.1\nE        +  where 716.6993843078614 = abs((21.400615692138672 - 738.1))\nE        +    where 21.400615692138672 = object_height.srv.ObjectHeight_Response(object_height=21.400615692138672, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.49s\n\nstderr:\n","iteration":3,"attempt":3}
{"attempt_time":9.379676342,"success":true,"final_state":"SUCCESS","tests_passed":14,"tests_failed":0,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":744,"total_tokens":2510,"error":null,"iteration":3,"attempt":4}
{"attempt_time":13.7692108154,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":730,"total_tokens":2496,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.55s]\n\nSummary: 1 package finished [0.66s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7feaf35cdba0>, <rclpy.node.Node object at 0x7feaf35d9de0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.91s\n\nstderr:\n","iteration":4,"attempt":1}
{"attempt_time":9.3414468765,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":736,"total_tokens":2502,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.56s]\n\nSummary: 1 package finished [0.68s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7efeb1805ba0>, <rclpy.node.Node object at 0x7efeb180dde0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 716.6993843078614 < 0.1\nE        +  where 716.6993843078614 = abs((21.400615692138672 - 738.1))\nE        +    where 21.400615692138672 = object_height.srv.ObjectHeight_Response(object_height=21.400615692138672, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.74s\n\nstderr:\n","iteration":4,"attempt":2}
{"attempt_time":10.0692017078,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":722,"total_tokens":2488,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.56s]\n\nSummary: 1 package finished [0.68s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f5150825ba0>, <rclpy.node.Node object at 0x7f5150831de0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 1.90s\n\nstderr:\n[INFO] [1740511020.751799510] [test_node]: Service not available, waiting again...\n","iteration":4,"attempt":3}
{"attempt_time":9.6662979126,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":789,"total_tokens":2555,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.56s]\n\nSummary: 1 package finished [0.68s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f989d659780>, <rclpy.node.Node object at 0x7f989d665cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.78s\n\nstderr:\n","iteration":4,"attempt":4}
{"attempt_time":10.1336390972,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":703,"total_tokens":2469,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.58s]\n\nSummary: 1 package finished [0.69s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7ff0c981dba0>, <rclpy.node.Node object at 0x7ff0c9829de0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.5438244104386 < 0.1\nE        +  where 737.5438244104386 = abs((0.5561755895614624 - 738.1))\nE        +    where 0.5561755895614624 = object_height.srv.ObjectHeight_Response(object_height=0.5561755895614624, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 1.92s\n\nstderr:\n[INFO] [1740511040.557571013] [test_node]: Service not available, waiting again...\n","iteration":4,"attempt":5}
{"attempt_time":13.4626979828,"success":true,"final_state":"SUCCESS","tests_passed":14,"tests_failed":0,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":662,"total_tokens":2428,"error":null,"iteration":5,"attempt":1}
{"attempt_time":8.7703828812,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":717,"total_tokens":2483,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.59s]\n\nSummary: 1 package finished [0.70s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7fa750f0d750>, <rclpy.node.Node object at 0x7fa750f19cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.52s\n\nstderr:\n","iteration":6,"attempt":1}
{"attempt_time":11.7201695442,"success":true,"final_state":"SUCCESS","tests_passed":14,"tests_failed":0,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":753,"total_tokens":2519,"error":null,"iteration":6,"attempt":2}
{"attempt_time":10.1295614243,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":764,"total_tokens":2530,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.59s]\n\nSummary: 1 package finished [0.70s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f0937685ba0>, <rclpy.node.Node object at 0x7f093768dde0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.48s\n\nstderr:\n","iteration":7,"attempt":1}
{"attempt_time":8.3576564789,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":688,"total_tokens":2454,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.53s]\n\nSummary: 1 package finished [0.64s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f876a455ba0>, <rclpy.node.Node object at 0x7f876a45dde0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 738.0785993844271 < 0.1\nE        +  where 738.0785993844271 = abs((0.021400615572929382 - 738.1))\nE        +    where 0.021400615572929382 = object_height.srv.ObjectHeight_Response(object_height=0.021400615572929382, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.48s\n\nstderr:\n","iteration":7,"attempt":2}
{"attempt_time":8.9729821682,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":781,"total_tokens":2547,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.54s]\n\nSummary: 1 package finished [0.65s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7fdc22fd5780>, <rclpy.node.Node object at 0x7fdc22fe1cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.48s\n\nstderr:\n","iteration":7,"attempt":3}
{"attempt_time":10.2383685112,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":731,"total_tokens":2497,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.61s]\n\nSummary: 1 package finished [0.72s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f01a2025ba0>, <rclpy.node.Node object at 0x7f01a2031de0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 1.71s\n\nstderr:\n[INFO] [1740511123.775166710] [test_node]: Service not available, waiting again...\n","iteration":7,"attempt":4}
{"attempt_time":9.9839675426,"success":true,"final_state":"SUCCESS","tests_passed":14,"tests_failed":0,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":780,"total_tokens":2546,"error":null,"iteration":7,"attempt":5}
{"attempt_time":8.7240977287,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":704,"total_tokens":2470,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.55s]\n\nSummary: 1 package finished [0.66s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f0ebef797b0>, <rclpy.node.Node object at 0x7f0ebef81cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.52s\n\nstderr:\n","iteration":8,"attempt":1}
{"attempt_time":8.8374123573,"success":true,"final_state":"SUCCESS","tests_passed":14,"tests_failed":0,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":746,"total_tokens":2512,"error":null,"iteration":8,"attempt":2}
{"attempt_time":9.3221924305,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":760,"total_tokens":2526,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.61s]\n\nSummary: 1 package finished [0.72s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7faa0605d690>, <rclpy.node.Node object at 0x7faa06069c90>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.48s\n\nstderr:\n","iteration":9,"attempt":1}
{"attempt_time":9.9049959183,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":737,"total_tokens":2503,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.56s]\n\nSummary: 1 package finished [0.67s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f05c9c71ba0>, <rclpy.node.Node object at 0x7f05c9c79de0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 738.0785993844271 < 0.1\nE        +  where 738.0785993844271 = abs((0.021400615572929382 - 738.1))\nE        +    where 0.021400615572929382 = object_height.srv.ObjectHeight_Response(object_height=0.021400615572929382, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 1.70s\n\nstderr:\n[INFO] [1740511170.531395464] [test_node]: Service not available, waiting again...\n","iteration":9,"attempt":2}
{"attempt_time":9.061529398,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":749,"total_tokens":2515,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.55s]\n\nSummary: 1 package finished [0.66s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f6166dad780>, <rclpy.node.Node object at 0x7f6166db9cf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.5438244104386 < 0.1\nE        +  where 737.5438244104386 = abs((0.5561755895614624 - 738.1))\nE        +    where 0.5561755895614624 = object_height.srv.ObjectHeight_Response(object_height=0.5561755895614624, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.48s\n\nstderr:\n","iteration":9,"attempt":3}
{"attempt_time":10.1576373577,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":723,"total_tokens":2489,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.59s]\n\nSummary: 1 package finished [0.70s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f71005e9ba0>, <rclpy.node.Node object at 0x7f71005f1de0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 1.95s\n\nstderr:\n[INFO] [1740511189.481763713] [test_node]: Service not available, waiting again...\n","iteration":9,"attempt":4}
{"attempt_time":8.7656965256,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":716,"total_tokens":2482,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.59s]\n\nSummary: 1 package finished [0.70s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f0abc619690>, <rclpy.node.Node object at 0x7f0abc621c90>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.48s\n\nstderr:\n","iteration":9,"attempt":5}
{"attempt_time":8.9785296917,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":751,"total_tokens":2517,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.61s]\n\nSummary: 1 package finished [0.72s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f29b5c85ba0>, <rclpy.node.Node object at 0x7f29b5c8dde0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.48s\n\nstderr:\n","iteration":9,"attempt":6}
{"attempt_time":9.0376396179,"success":true,"final_state":"SUCCESS","tests_passed":14,"tests_failed":0,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":722,"total_tokens":2488,"error":null,"iteration":9,"attempt":7}
{"attempt_time":8.9706480503,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":772,"total_tokens":2538,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.58s]\n\nSummary: 1 package finished [0.70s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f7efa56dba0>, <rclpy.node.Node object at 0x7f7efa575de0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.51s\n\nstderr:\n","iteration":10,"attempt":1}
{"attempt_time":8.3963856697,"success":false,"final_state":"TEST","tests_passed":1,"tests_failed":1,"tests_skipped":1,"prompt_tokens":1766,"completion_tokens":686,"total_tokens":2452,"error":"Tests failed. Logs:\nstdout:\nStarting >>> object_height\nFinished <<< object_height [0.55s]\n\nSummary: 1 package finished [0.67s]\ns.F\n=================================== FAILURES ===================================\n_______________ test_valid_parameters[35.0-1152-3.45-6.5-738.1] ________________\n\nservice_client = (<rclpy.client.Client object at 0x7f0cb58e17b0>, <rclpy.node.Node object at 0x7f0cb58edcf0>)\nfocal_length = 35.0, image_height = 1152, pixel_size = 3.45, distance = 6.5\nexpected = 738.1\n\n    @pytest.mark.parametrize(\n        \"focal_length,image_height,pixel_size,distance,expected\",\n        [\n            (35.0, 1152, 3.45, 6.5, 738.1),\n            (35.0, 1152, 3.45, 5.9, 670.0),\n            (50.0, 1152, 3.45, 6.5, 516.7),\n        ],\n    )\n    def test_valid_parameters(\n        service_client, focal_length, image_height, pixel_size, distance, expected\n    ):\n        \"\"\"Test service with various valid parameter combinations\"\"\"\n        client, node = service_client\n        response = call_service(\n            client, node, focal_length, image_height, pixel_size, distance\n        )\n        assert response.success\n>       assert abs(response.object_height - expected) < 0.1\nE       AssertionError: assert 737.3618971467018 < 0.1\nE        +  where 737.3618971467018 = abs((0.7381028532981873 - 738.1))\nE        +    where 0.7381028532981873 = object_height.srv.ObjectHeight_Response(object_height=0.7381028532981873, success=True, feedback='Calculation successful.').object_height\n\nsrc\/object_height\/test\/test_service_node.py:97: AssertionError\n=========================== short test summary info ============================\nFAILED src\/object_height\/test\/test_service_node.py::test_valid_parameters[35.0-1152-3.45-6.5-738.1]\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n1 failed, 1 passed, 1 skipped in 0.53s\n\nstderr:\n","iteration":10,"attempt":2}
